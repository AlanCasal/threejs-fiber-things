/* eslint-disable @typescript-eslint/no-var-requires */
/* eslint-disable import/no-extraneous-dependencies */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei/native';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
	nodes: {
		Beta_Joints: THREE.SkinnedMesh;
		Beta_Surface: THREE.SkinnedMesh;
		mixamorigHips: THREE.Bone;
	};
	materials: {
		Beta_Joints_MAT1: THREE.MeshPhysicalMaterial;
		Beta_HighLimbsGeoSG3: THREE.MeshPhysicalMaterial;
	};
};

const CatwalkGLB = require('./Catwalk.glb');
const ActionName = 'Armature|mixamo.com|Layer0';

const Catwalk = (props: JSX.IntrinsicElements['group']) => {
	const group = useRef<THREE.Group>(null);
	const { nodes, materials, animations } = useGLTF(CatwalkGLB) as GLTFResult;

	const { actions } = useAnimations(animations, group);

	useEffect(() => {
		actions[ActionName]?.reset();
		actions[ActionName]?.play();
	}, [actions]);

	return (
		<group
			ref={group}
			{...props}
			dispose={null}
		>
			<group name='Scene'>
				<group
					name='Armature'
					rotation={[Math.PI / 2, 0, 0]}
					scale={0.02}
					position={[0, -1.4, 0]}
				>
					<skinnedMesh
						name='Beta_Joints'
						geometry={nodes.Beta_Joints.geometry}
						material={materials.Beta_Joints_MAT1}
						skeleton={nodes.Beta_Joints.skeleton}
					/>
					<skinnedMesh
						name='Beta_Surface'
						geometry={nodes.Beta_Surface.geometry}
						material={materials.Beta_HighLimbsGeoSG3}
						skeleton={nodes.Beta_Surface.skeleton}
					/>
					<primitive object={nodes.mixamorigHips} />
				</group>
			</group>
		</group>
	);
};

useGLTF.preload(CatwalkGLB);

export default Catwalk;
